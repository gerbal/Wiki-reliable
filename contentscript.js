var logging = true; //enables logging in the broswers JS console.

function getStatsPageURI_() {
    //gets the URI of the current page, turns it into the stats page URL returns it
    var url = document.querySelectorAll('[rel="canonical"]')[0].getAttribute('href');
    var article = url.slice(url.lastIndexOf("/") + 1, url.length);
    var lang = url.slice(); //we need to get the language and drop it in the "&lang". Until then this is empty
    var hrefe = document.createElement("a");
    hrefe.href = url;
    var host = hrefe.hostname;
    var lang = host.substr(0, host.indexOf('.'));
    console.log(lang);
    console.log(lang.constructor.name);

    var statsuri = "https://tools.wmflabs.org/xtools/articleinfo/index.php?article=" + article + "&lang="+ lang +"&wiki=wikipedia";
    if (logging) {
        console.log("statsuri: "+statsuri);
    }  
    return statsuri;
}

function extractStats_(div) {
    //Currently unused. May be used to extract stats from the div we pass around
    var tables = div.getElementsByType('table');
    putbox(document, tables, "warning");
}

function putbox(document, score, color) {
    //puts a box on the page and styles it. 
    var box = document.getElementById('mw-content-text');
    var table = document.createElement("table");
    var newrow = document.createElement('tr');
    var th = document.createElement('th');
    newrow.className = color;
    table.className = color + " infobox vcard ";
    table.style.width = "22em";
    table.id = color;
    th.colspan = "2";
    th.className = color + " n";
    th.style.textAlign = "center";
    th.style.fontSize = "125%";
    th.appendChild(score.firstChild);
    newrow.appendChild(th);
    table.appendChild(newrow);
    box.insertBefore(table, box.firstChild);
}

// this is our mainloop, we need to refactor for better structure
if (!document.getElementById("ca-nstab-main") || (document.getElementsByClassName("action-view").length==0) || (document.getElementsByClassName("ns-subject").length==0)){
    //We're checking to see if we are on a wikipedia article page. 
    console.log("nothing to do");
}
else{
console.log(document.getElementsByClassName("action-view"));

//We're opening a connection to background.js
var port = chrome.runtime.connect({
    name: "uriexchange"
}); 
//send the URI generated by getStatsPageURI_()
port.postMessage({
    uri: getStatsPageURI_()
}); 
if (logging) {
console.log("port name: " + port.name);
}
port.onMessage.addListener(function (msg) { //wait for background.js to hand us back a score (or something)
    xml = msg.table;
    var html =new DOMParser().parseFromString(xml, "text/html");
    if (logging) {
        console.log("msg: " + msg);
        console.log("msg.table: " + msg.table);
        //console.log("xml: " +xml);
        //console.log("html:"+html);
    }
    putbox(document, html, "success");
});

function insertCSS() {
    //inserts our cutdown css styles to color the scoreBox.
    var css = document.createElement("link");
    var bsurl = chrome.extension.getURL("bootstrap.css");
    css.href = bsurl;
    css.rel = "stylesheet";
    document.head.appendChild(css);
}
insertCSS();

}